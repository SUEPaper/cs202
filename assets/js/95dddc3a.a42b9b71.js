"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1042],{1794:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>t,default:()=>l,frontMatter:()=>r,metadata:()=>i,toc:()=>c});var d=s(3274),o=s(1377);const r={id:"auth_api",sidebar_position:14},t="API \u9274\u6743",i={id:"todo/backend/auth_api",title:"API \u9274\u6743",description:"\u672c\u8bfe\u7a0b\u7f51\u7ad9\u5185\u5bb9\u8bf7\u4ed4\u7ec6\u9605\u8bfb\u540e\u518d\u8fdb\u884c\u5b9e\u64cd\u3002\u56e0\u672a\u4ed4\u7ec6\u9605\u8bfb\u5185\u5bb9\uff0c\u51fa\u73b0\u4efb\u4f55\u9519\u8bef\u540e\u679c\u81ea\u8d1f\uff08\u9003\uff5e\uff5e\uff5e\u9003\uff5e\uff5e\uff5e\u9003",source:"@site/docs/todo/backend/api_with_authentication.md",sourceDirName:"todo/backend",slug:"/todo/backend/auth_api",permalink:"/cs202/todo/backend/auth_api",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/todo/backend/api_with_authentication.md",tags:[],version:"current",sidebarPosition:14,frontMatter:{id:"auth_api",sidebar_position:14},sidebar:"todoSidebar",previous:{title:"\u7528\u6237\u767b\u9646",permalink:"/cs202/todo/backend/auth"},next:{title:"VS Code Debug FastAPI \u4ee3\u7801",permalink:"/cs202/todo/backend/debug"}},a={},c=[{value:"\u5b9e\u73b0API\u9274\u6743\u7684\u4f9d\u8d56",id:"\u5b9e\u73b0api\u9274\u6743\u7684\u4f9d\u8d56",level:2},{value:"\u5b9e\u73b0\u4fee\u6539\u7528\u6237\u540d\u548c\u5bc6\u7801\u7684API",id:"\u5b9e\u73b0\u4fee\u6539\u7528\u6237\u540d\u548c\u5bc6\u7801\u7684api",level:2},{value:"\u5728Todo\u4e2d\u52a0\u5165<code>user_id</code>\uff0c\u5b9e\u73b0\u4e00\u5bf9\u591a\u3002",id:"\u5728todo\u4e2d\u52a0\u5165user_id\u5b9e\u73b0\u4e00\u5bf9\u591a",level:2}];function u(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",img:"img",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(n.h1,{id:"api-\u9274\u6743",children:"API \u9274\u6743"}),"\n",(0,d.jsxs)(n.admonition,{type:"tip",children:[(0,d.jsx)(n.p,{children:"\u672c\u8bfe\u7a0b\u7f51\u7ad9\u5185\u5bb9\u8bf7\u4ed4\u7ec6\u9605\u8bfb\u540e\u518d\u8fdb\u884c\u5b9e\u64cd\u3002\u56e0\u672a\u4ed4\u7ec6\u9605\u8bfb\u5185\u5bb9\uff0c\u51fa\u73b0\u4efb\u4f55\u9519\u8bef\u540e\u679c\u81ea\u8d1f\uff08\u9003\uff5e\uff5e\uff5e\u9003\uff5e\uff5e\uff5e\u9003"}),(0,d.jsxs)(n.p,{children:["\u8bf7\u5207\u6362\u5230 ",(0,d.jsx)(n.code,{children:"backend_api_with_auth_start"})," \u5206\u652f\uff0c\u5f00\u59cb\u6b64\u6559\u7a0b\u4ee3\u7801\u7684\u7f16\u5199\u3002"]}),(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"\u6240\u6709\u7684\u4ee3\u7801\u8bf7\u4e0d\u8981\u590d\u5236\u7c98\u8d34\uff0c\u8bf7\u624b\u6572\u6bcf\u4e00\u884c\u4ee3\u7801\u3002\u590d\u5236\u7c98\u8d34\u4e0d\u4f1a\u8ba9\u4f60\u52a8\u8111\u5b50\uff0c\u800c\u624b\u6572\u6bcf\u4e00\u4e2a\u884c\u4ee3\u7801\u4f1a\u8ba9\u4f60\u81ea\u7136\u800c\u7136\u5730\u53bb\u52a8\u8111\u5b50\u4f1a\u60f3\u6bcf\u4e00\u884c\u4ee3\u7801\u7684\u542b\u4e49\u548c\u539f\u7406"})})]}),"\n",(0,d.jsx)(n.p,{children:"\u4e0a\u6587\u4ecb\u7ecd\u4e86\u5982\u4f55\u5b9e\u73b0\u4e00\u4e2a\u7528\u6237\u767b\u9646\u7684API\uff0c\u6709\u4e86\u767b\u9646\u7684API\u4ee5\u540e\uff0c\u5ba2\u6237\u7aef\uff08\u6d4f\u89c8\u5668\u3001IOS/Android App\uff09\u4fbf\u53ef\u901a\u62ff\u5230JWT\u4ee4\u724c\u3002\u5728\u767b\u9646\u4ee5\u540e\uff0c\u5ba2\u6237\u7aef\u6bcf\u6b21\u53d1\u9001\u8bf7\u6c42\u53ef\u4ee5\u5c06JWT\u4ee4\u724c\u9644\u5e26\u5230HTTP\u8bf7\u6c42\u7684Header\u4e2d\u3002"}),"\n",(0,d.jsx)(n.p,{children:"\u4ee5\u4e0b\u662f\u4e00\u4e2a\u793a\u4f8b\u7684HTTP\u8bf7\u6c42\u62a5\u6587\uff0c\u4f7f\u7528Bearer\u7c7b\u578b\u7684JWT\u4ee4\u724c\uff1a"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-bash",children:"GET /api/data HTTP/1.1\nHost: api.example.com\nAuthorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\n"})}),"\n",(0,d.jsx)(n.p,{children:"\u5ba2\u6237\u7aef\u6bcf\u6b21HTTP\u8bf7\u6c42\u5e26\u4e0aJWT\u4ee4\u724c\uff0c\u670d\u52a1\u5668\u7aef\u4ee3\u7801\u53ea\u9700\u8981\u5728\u6bcf\u6b21\u8bf7\u6c42\u7684\u65f6\u5019\u89e3\u6790JWT\u4ee4\u724c\uff0c\u89e3\u5bc6\u4ee4\u724c\u5f97\u5230\u7528\u6237\u4fe1\u606f\u3002"}),"\n",(0,d.jsx)(n.h2,{id:"\u5b9e\u73b0api\u9274\u6743\u7684\u4f9d\u8d56",children:"\u5b9e\u73b0API\u9274\u6743\u7684\u4f9d\u8d56"}),"\n",(0,d.jsxs)(n.p,{children:["\u7528 VS Code \u6253\u5f00 ",(0,d.jsx)(n.code,{children:"api/deps.py"}),"\uff0c\u5c06\u4ee3\u7801\u4fee\u6539\u6210\u5982\u4e0b\uff1a"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",metastring:"showLineNumbers",children:'from typing import Generator\nfrom db.config import SessionLocal\nfrom fastapi import Depends, HTTPException, status\nfrom fastapi.security import OAuth2PasswordBearer\nfrom pydantic import ValidationError\nfrom sqlalchemy.orm import Session\nfrom jose import jwt\nfrom core import security\nfrom crud import crud_user\nfrom schemas import token as schemas_token\n\ndef get_db() -> Generator:\n    db = SessionLocal()\n    try:\n        yield db\n    finally:\n        db.close()\n\nreusable_oauth2 = OAuth2PasswordBearer(\n    tokenUrl="/api/login/access_token"\n)\n\ndef get_current_user(\n    db: Session = Depends(get_db),\n    token: str = Depends(reusable_oauth2)\n):\n    try:\n        payload = jwt.decode(\n            token, security.SECRET_KEY, algorithms=[security.ALGORITHM]\n        )\n        token_data = schemas_token.TokenPayload(**payload)\n    except (jwt.JWTError, ValidationError):\n        raise HTTPException(\n            status_code=status.HTTP_403_FORBIDDEN,\n            detail="Could not validate credentials"\n        )\n\n    user = crud_user.get_by_id(db, id=token_data.sub)\n\n    if not user:\n        raise HTTPException(\n            status_code=status.HTTP_404_NOT_FOUND,\n            detail="User not found"\n        )\n\n    return user\n'})}),"\n",(0,d.jsxs)(n.p,{children:["\u4e0b\u5217\u4ee3\u7801\u521b\u5efa\u4e86\u4e00\u4e2a",(0,d.jsx)(n.code,{children:"OAuth2PasswordBearer"}),"\u5b9e\u4f8b\uff0c\u7528\u4e8e\u5904\u7406OAuth2\u5bc6\u7801\u6a21\u5f0f\u7684\u8eab\u4efd\u9a8c\u8bc1\u3002",(0,d.jsx)(n.code,{children:"tokenUrl"}),"\u53c2\u6570\u6307\u5b9a\u4e86\u7528\u4e8e\u83b7\u53d6\u8bbf\u95ee\u4ee4\u724c\u7684URL\u3002"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:'reusable_oauth2 = OAuth2PasswordBearer(\n    tokenUrl="/api/login/access_token"\n)\n'})}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"get_current_user"}),"\u51fd\u6570\u662f\u4e00\u4e2a\u8def\u7531\u5904\u7406\u51fd\u6570\uff0c\u901a\u8fc7\u4f9d\u8d56 ",(0,d.jsx)(n.code,{children:"reusable_oauth2"})," \u5f97\u5230HTTP\u8bf7\u6c42\u4e2d\u7684JWT\u4ee4\u724c\uff0c\u5e76\u9a8c\u8bc1\u5176\u6709\u6548\u6027\u3002\u5982\u679c\u4ee4\u724c\u9a8c\u8bc1\u5931\u8d25\uff0c\u5c06\u5f15\u53d1",(0,d.jsx)(n.code,{children:"jwt.JWTError"}),"\u6216",(0,d.jsx)(n.code,{children:"ValidationError"}),"\u5f02\u5e38\uff0c\u5e76\u8fd4\u56deHTTP 403 Forbidden\u9519\u8bef\u3002\u5982\u679c\u4ee4\u724c\u9a8c\u8bc1\u6210\u529f\uff0c\u4fbf\u4f1a\u5f97\u5230 ",(0,d.jsx)(n.code,{children:"user_id"})," \u4fe1\u606f\u3002\u901a\u8fc7CRUD\u63d0\u4f9b\u7684",(0,d.jsx)(n.code,{children:"get_by_id"}),"\u65b9\u6cd5\u83b7\u53d6\u7528\u6237\u4fe1\u606f\u3002"]}),"\n",(0,d.jsx)(n.h2,{id:"\u5b9e\u73b0\u4fee\u6539\u7528\u6237\u540d\u548c\u5bc6\u7801\u7684api",children:"\u5b9e\u73b0\u4fee\u6539\u7528\u6237\u540d\u548c\u5bc6\u7801\u7684API"}),"\n",(0,d.jsx)(n.p,{children:"\u4ece\u4e1a\u52a1\u903b\u8f91\u7684\u89d2\u5ea6\u51fa\u53d1\uff0c\u66f4\u6539\u7528\u6237\u540d\u548c\u5bc6\u7801\u5e94\u8be5\u53ea\u5141\u8bb8\u5f53\u524d\u7528\u6237\u4fee\u6539\u81ea\u5df1\u7684\u7528\u6237\u540d\u548c\u5bc6\u7801\uff0c\u56e0\u6b64\u8fd9\u4e24\u4e2aAPI\u9700\u8981\u5b9e\u73b0\u9274\u6743\u9a8c\u8bc1\u529f\u80fd\u3002"}),"\n",(0,d.jsxs)(n.p,{children:["\u7528 VS Code \u6253\u5f00 ",(0,d.jsx)(n.code,{children:"api/users.py"})," \u6587\u4ef6\uff0c\u5c06\u4ee3\u7801\u4fee\u6539\u5982\u4e0b\uff1a"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",metastring:"showLineNumbers",children:'from fastapi import APIRouter, Depends, HTTPException\nfrom sqlalchemy.orm import Session\nfrom api import deps\nfrom crud import crud_user\nfrom schemas import user as schemas_user\n\nrouter = APIRouter()\n\n@router.post("/users", response_model=schemas_user.UserInDB)\ndef create_user(\n    user_params: schemas_user.UserCreate,\n    db: Session = Depends(deps.get_db)\n):\n    user = crud_user.get_by_email(db=db, email=user_params.email)\n    if user:\n        raise HTTPException(\n            status_code=400,\n            detail="The user with this email already exists in the system."\n        )\n    user = crud_user.create(db=db, user_params=user_params)\n    return user\n\n@router.put("/users/name", response_model=schemas_user.UserInDB)\ndef update_user(\n    user_params: schemas_user.UserUpdateName,\n    db: Session = Depends(deps.get_db),\n    current_user = Depends(deps.get_current_user)\n):\n    user = crud_user.update_name(db=db, id=current_user.id, user_params=user_params)\n    return user\n\n@router.put("/users/password", response_model=schemas_user.UserInDB)\ndef update_user(\n    user_params: schemas_user.UserUpdatePassword,\n    db: Session = Depends(deps.get_db),\n    current_user = Depends(deps.get_current_user)\n):\n    user = crud_user.update_password(db=db, id=current_user.id, user_params=user_params)\n    return user\n'})}),"\n",(0,d.jsxs)(n.p,{children:["\u4e0a\u8ff0\u4ee3\u7801\u53ef\u77e5\uff0c\u5b9e\u73b0API\u7684\u9274\u6743\u9a8c\u8bc1\u529f\u80fd\u7684\u65b9\u5f0f\u5f88\u7b80\u5355\uff0c\u52a0\u5165 ",(0,d.jsx)(n.code,{children:"deps.get_current_user"})," \u51fd\u6570\u4f9d\u8d56\u4fbf\u53ef\u3002"]}),"\n",(0,d.jsxs)(n.p,{children:["\u63a5\u4e0b\u6765\u662f\u6d4b\u8bd5\u9636\u6bb5\uff0c\u8bf7\u7528\u6d4f\u89c8\u5668\u6253\u5f00 ",(0,d.jsx)(n.a,{href:"http://localhost:8000/docs(%E6%89%93%E5%BC%80",children:"http://localhost:8000/docs(\u6253\u5f00"})," URL \u524d\u8bf7\u786e\u4fdd\u6211\u4eec\u7684FastAPI \u5e94\u7528\u662f\u8fd0\u884c\u8d77\u6765\u7684)\u6d4b\u8bd5\u4fee\u6539\u7528\u6237\u540d\u548c\u5bc6\u7801\u7684API\u3002"]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.img,{src:s(1367).A+"",width:"1212",height:"928"})}),"\n",(0,d.jsxs)(n.p,{children:["\u53ef\u4ee5\u770b\u5230\u4fee\u6539\u7528\u6237\u540d\u548c\u5bc6\u7801\u7684\u4e24\u4e2aAPI\u8bf7\u6c42\u591a\u4e86\u4e00\u628a\u5f62\u72b6\u50cf\u6253\u5f00\u7684\u5c0f\u9501\uff0c\u8fd9\u4ee3\u8868\u8fd9\u9700\u8981\u767b\u9646\u624d\u80fd\u4f7f\u7528\u8fd9\u4e9bAPI\u3002\u90a3\u4e48\u6211\u4eec\u8be5\u5982\u4f55\u4f7f\u7528\u8fd9\u4e9b\u52a0\u9501\u7684API\u5462\uff1f\u70b9\u51fb\u53f3\u4e0a\u89d2\u7684 ",(0,d.jsx)(n.code,{children:"Authorize"})," \u6309\u94ae (",(0,d.jsx)(n.strong,{children:"\u524d\u63d0\u662f\u5df2\u7ecf\u6ce8\u518c\u597d\u4e86\u4e00\u4e2a\u7528\u6237"}),")\u3002"]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.img,{src:s(7084).A+"",width:"1192",height:"916"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.img,{src:s(149).A+"",width:"782",height:"710"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.img,{src:s(5482).A+"",width:"746",height:"512"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.img,{src:s(691).A+"",width:"1192",height:"780"})}),"\n",(0,d.jsx)(n.p,{children:"\u5173\u95ed\u5f39\u7a97\u540e\uff0c\u4f60\u4f1a\u770b\u5230\u539f\u672c\u6253\u5f00\u7684\u5c0f\u9501\u88ab\u9501\u4e0a\u4e86\uff0c\u8bf4\u660e\u8fd9\u51e0\u4e2aAPI\u53ef\u4ee5\u4f7f\u7528\u4e86\uff0c\u5e76\u4e14Swagger UI\u5728\u53d1\u9001\u8bf7\u6c42\u65f6\u4f1a\u81ea\u52a8\u5c06\u524d\u9762\u83b7\u53d6\u5230\u7684JWT\u4ee4\u724c\u653e\u5230HTTP\u7684header\u4e2d\u3002\u89e3\u4e0b\u6765\u8bf7\u7ee7\u7eed\u6d4b\u8bd5\u4fee\u6539\u7528\u6237\u540d\u548c\u5bc6\u7801\u7684API\u3002"}),"\n",(0,d.jsxs)(n.h2,{id:"\u5728todo\u4e2d\u52a0\u5165user_id\u5b9e\u73b0\u4e00\u5bf9\u591a",children:["\u5728Todo\u4e2d\u52a0\u5165",(0,d.jsx)(n.code,{children:"user_id"}),"\uff0c\u5b9e\u73b0\u4e00\u5bf9\u591a\u3002"]}),"\n",(0,d.jsxs)(n.p,{children:["\u5728Todo List Application\u7684\u539f\u578b\u8bbe\u8ba1\u4e2d\uff0c\u6bcf\u4e2a\u7528\u6237\u90fd\u6709\u81ea\u5df1\u7684 Todo List\u3002\u5e76\u4e14\u6bcf\u4e2a\u7528\u6237\u53ea\u80fd\u770b\u5230\u5c5e\u4e8e\u81ea\u5df1\u7684Todo List\uff0c\u5e76\u4e14\u4e5f\u53ea\u80fd\u4fee\u6539\u5c5e\u4e8e\u81ea\u5df1\u7684Todo List\u3002\u901a\u8fc7\u5206\u6790\u6211\u4eec\u53ef\u77e5\u9053\u5728\u6570\u636e\u5e93\u4e2d ",(0,d.jsx)(n.code,{children:"todos"})," \u8868\u4e2d\u52a0\u4e00\u5217 ",(0,d.jsx)(n.code,{children:"user_id"}),"\uff0c\u5e76\u4e14\u5728 ",(0,d.jsx)(n.code,{children:"todos"})," \u8868CRUD\u65f6\u52a0\u5165 ",(0,d.jsx)(n.code,{children:"user_id"})," \u5c5e\u6027\u7684\u7ea6\u675f\uff0c\u4fbf\u53ef\u5b9e\u73b0\u4e0a\u8ff0\u529f\u80fd\u3002"]}),"\n",(0,d.jsxs)(n.p,{children:["\u6253\u5f00\u7ec8\u7aef\uff0c\u5e76\u4e14\u8fdb\u5165 ",(0,d.jsx)(n.code,{children:"db/"})," \u6587\u4ef6\u5939\uff0c\u8f93\u5165\u5982\u4e0b\u547d\u4ee4\u3002"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-bash",children:'alembic revision -m "add_user_id_in_todo_table"\n'})}),"\n",(0,d.jsxs)(n.p,{children:["\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5728 ",(0,d.jsx)(n.code,{children:"db/migrations/versions"})," \u6587\u4ef6\u5939\u4e0b\u65b0\u589e\u4e86\u4e00\u4e2a",(0,d.jsx)(n.code,{children:"12c84915bab9_add_user_id_in_todo_table.py"}),"\u3002(",(0,d.jsxs)(n.strong,{children:["\u4e5f\u8bb8\u5728\u4f60\u7684\u7535\u8111\u91cc\u9762\u6587\u4ef6\u540d\u4e0d\u662f",(0,d.jsx)(n.code,{children:"12c84915bab9_"}),"\u5f00\u5934\u7684\uff0c\u8fd9\u4e2a\u53d6\u51b3\u4e8e\u4f60\u7684\u7535\u8111\u968f\u673a\u751f\u6210\u7684\u6570\u5b57\u548c\u5b57\u6bcd\u7684\u7ec4\u5408\uff0c \u672c\u6559\u7a0b\u7528",(0,d.jsx)(n.code,{children:"xxx_add_user_id_in_todo_table.py"}),"\u6307\u4ee3\u4f60\u672c\u5730\u5bf9\u5e94\u7684\u6587\u4ef6"]}),")"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-bash",children:"E:\ndb\n\u251c\u2500\u2500 __init__.py\n\u251c\u2500\u2500 alembic.ini\n\u251c\u2500\u2500 config.py\n\u2514\u2500\u2500 migrations\n    \u251c\u2500\u2500 README\n    \u251c\u2500\u2500 env.py\n    \u251c\u2500\u2500 script.py.mako\n    \u2514\u2500\u2500 versions\n        \u251c\u2500\u2500 0f54f99f8360_create_todos_table.py\n        \u251c\u2500\u2500 12c84915bab9_add_user_id_in_todo_table.py\n        \u2514\u2500\u2500 a61389cd92a0_create_users_table.py\n"})}),"\n",(0,d.jsxs)(n.p,{children:["\u8bf7\u7528 VS Code \u6253\u5f00 ",(0,d.jsx)(n.code,{children:"xxx_add_user_id_in_todo_table.py"}),"\uff0c\u5c06\u4ee3\u7801\u6587\u4ef6\u4e2d\u7684",(0,d.jsx)(n.code,{children:"upgrade"}),"\u3001",(0,d.jsx)(n.code,{children:"downgrade"})," \u51fd\u6570\u66ff\u6362\u6210\u5982\u4e0b\u4ee3\u7801\uff1a"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",metastring:"showLineNumbers",children:'def upgrade() -> None:\n    op.add_column(\'todos\', sa.Column(\'user_id\', sa.Integer))\n    op.create_foreign_key(\n        "user_todo",\n        "todos",\n        "users",\n        ["user_id"],\n        ["id"],\n    )\n\ndef downgrade() -> None:\n    op.drop_constraint("user_todo", "todos", type_="foreignkey")\n    op.drop_column("todos", "user_id")\n'})}),"\n",(0,d.jsxs)(n.p,{children:["\u6253\u5f00\u7ec8\u7aef\uff0c\u5e76\u4e14\u8fdb\u5165 ",(0,d.jsx)(n.code,{children:"db/"})," \u6587\u4ef6\u5939\uff0c\u8f93\u5165\u5982\u4e0b\u547d\u4ee4"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-bash",children:"alembic upgrade head\n"})}),"\n",(0,d.jsxs)(n.p,{children:["\u8bf7\u7528 VS Code \u6253\u5f00 ",(0,d.jsx)(n.code,{children:"models/todo.py"}),"\uff0c\u5c06\u4ee3\u7801\u51fd\u6570\u66ff\u6362\u6210\u5982\u4e0b\u4ee3\u7801\uff1a"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",metastring:"showLineNumbers",children:'from datetime import datetime\nfrom sqlalchemy import TIMESTAMP, Boolean, Column, Integer, Text, ForeignKey\nfrom sqlalchemy.orm import relationship\nfrom db.config import Base\n\nclass Todo(Base):\n    __tablename__ = "todos"\n\n    id = Column(Integer, primary_key=True, index=True)\n    is_done = Column(Boolean, default=False)\n    content = Column(Text, nullable=False)\n    user_id = Column(Integer, ForeignKey("users.id"), nullable=True)\n    created_at = Column(TIMESTAMP(timezone=True),\n                        nullable=False, default=datetime.utcnow)\n    updated_at = Column(TIMESTAMP(timezone=True), nullable=False,\n                        onupdate=datetime.utcnow, default=datetime.utcnow)\n    user = relationship("User", back_populates="todos")\n'})}),"\n",(0,d.jsxs)(n.p,{children:["\u8bf7\u7528 VS Code \u6253\u5f00 ",(0,d.jsx)(n.code,{children:"models/user.py"}),"\uff0c\u5c06\u4ee3\u7801\u51fd\u6570\u4fee\u6539\u6210\u5982\u4e0b\u4ee3\u7801\uff1a"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",metastring:"showLineNumbers",children:'from datetime import datetime\nfrom sqlalchemy import TIMESTAMP, Column, Integer, String\nfrom sqlalchemy.orm import relationship\nfrom db.config import Base\n\nclass User(Base):\n    __tablename__ = "users"\n\n    id = Column(Integer, primary_key=True, index=True)\n    name = Column(String(200), nullable=False)\n    email = Column(String(200), unique=True, index=True, nullable=False)\n    hashed_password = Column(String(200), nullable=False)\n    created_at = Column(TIMESTAMP(timezone=True),\n                        nullable=False, default=datetime.utcnow)\n    updated_at = Column(TIMESTAMP(timezone=True), nullable=False,\n                        onupdate=datetime.utcnow, default=datetime.utcnow)\n    todos = relationship("Todo", uselist=True, back_populates="user")\n'})}),"\n",(0,d.jsxs)(n.p,{children:["\u8bf7\u7528 VS Code \u6253\u5f00 ",(0,d.jsx)(n.code,{children:"crud/todo.py"}),"\uff0c\u5c06\u4ee3\u7801\u51fd\u6570\u4fee\u6539\u6210\u5982\u4e0b\u4ee3\u7801\uff1a"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",metastring:"showLineNumbers",children:"from fastapi.encoders import jsonable_encoder\nfrom sqlalchemy.orm import Session\nfrom crud.base import CRUDBase\nfrom models import Todo as ModelsTodo\nfrom typing import Any\n\nclass CRUDTodo(CRUDBase):\n\n    def get_by_id_with_user_id(self, db:Session, id: Any, user_id: Any):\n        return db.query(self.model).filter(self.model.id == id).filter(self.model.user_id == user_id).first()\n\n    def get_all_by_user_id(self, db: Session, user_id: Any):\n         return db.query(self.model).filter(self.model.user_id == user_id).all()\n\n    def create(self, db: Session, user_id: Any, todo_params):\n        todo_data = jsonable_encoder(todo_params)\n        todo = self.model(**todo_data)\n        todo.user_id = user_id\n        db.add(todo)\n        db.commit()\n        db.refresh(todo)\n        return todo\n\n    def update(self, db: Session, id: Any, user_id: Any, todo_params):\n\n        todo = db.query(self.model).filter(self.model.id == id).filter(self.model.user_id == user_id).first()\n\n        todo_params_dict = todo_params.dict(exclude_unset=True)\n        for key, value in todo_params_dict.items():\n            setattr(todo, key, value)\n\n        db.commit()\n        db.refresh(todo)\n        return todo\n\n\ncrud_todo = CRUDTodo(ModelsTodo)\n"})}),"\n",(0,d.jsxs)(n.p,{children:["\u6700\u540e\u8bf7\u7528 VS Code \u6253\u5f00 ",(0,d.jsx)(n.code,{children:"api/todos.py"}),"\uff0c\u5c06\u4ee3\u7801\u51fd\u6570\u4fee\u6539\u6210\u5982\u4e0b\u4ee3\u7801\uff1a"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",metastring:"showLineNumbers",children:'from fastapi import APIRouter, Depends, HTTPException\nfrom sqlalchemy.orm import Session\nfrom api import deps\nfrom crud import crud_todo\nfrom schemas import todo as schemas_todo\n\nrouter = APIRouter()\n\n@router.get("/todos", response_model=list[schemas_todo.TodoInDB])\ndef get_all_todos(\n    db: Session = Depends(deps.get_db),\n    current_user = Depends(deps.get_current_user)\n):\n    todos = crud_todo.get_all_by_user_id(db=db, user_id=current_user.id)\n    return todos\n\n@router.post("/todos", response_model=schemas_todo.TodoInDB)\ndef create_todo(\n    todo_params: schemas_todo.TodoCreate,\n    db: Session = Depends(deps.get_db),\n    current_user = Depends(deps.get_current_user)\n):\n    todo = crud_todo.create(db=db, user_id=current_user.id, todo_params=todo_params)\n    return todo\n\n@router.put("/todos/{todo_id}", response_model=schemas_todo.TodoInDB)\ndef update_todo(\n    todo_id: int,\n    todo_params: schemas_todo.TodoCreate,\n    db: Session = Depends(deps.get_db),\n    current_user = Depends(deps.get_current_user)\n):\n    todo = crud_todo.get_by_id_with_user_id(db=db, id=todo_id, user_id=current_user.id)\n\n    if not todo:\n        raise HTTPException(status_code=404, detail="Todo not found")\n\n    todo = crud_todo.update(db=db, id=todo_id, user_id=current_user.id, todo_params=todo_params)\n    return todo\n\n@router.delete("/todos/{todo_id}", response_model=schemas_todo.TodoInDB)\ndef delete_todo(\n    todo_id: int,\n    db: Session = Depends(deps.get_db),\n    current_user = Depends(deps.get_current_user)\n):\n\n    todo = crud_todo.get_by_id_with_user_id(db=db, id=todo_id, user_id=current_user.id)\n\n    if not todo:\n        raise HTTPException(status_code=404, detail="Todo not found")\n    todo = crud_todo.remove(db=db, id=todo_id)\n\n    return todo\n'})}),"\n",(0,d.jsxs)(n.p,{children:["\u63a5\u4e0b\u6765\u662f\u6d4b\u8bd5\u9636\u6bb5\uff0c\u8bf7\u7528\u6d4f\u89c8\u5668\u6253\u5f00 ",(0,d.jsx)(n.a,{href:"http://localhost:8000/docs(%E6%89%93%E5%BC%80",children:"http://localhost:8000/docs(\u6253\u5f00"})," URL \u524d\u8bf7\u786e\u4fdd\u6211\u4eec\u7684FastAPI \u5e94\u7528\u662f\u8fd0\u884c\u8d77\u6765\u7684)\u6d4b\u8bd5Todos\u7684\u589e\u5220\u6539\u67e5API\u3002"]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.img,{src:s(6200).A+"",width:"981",height:"981"})}),"\n",(0,d.jsx)(n.admonition,{type:"tip",children:(0,d.jsxs)(n.p,{children:["\u53ef\u4ee5\u5207\u6362 ",(0,d.jsx)(n.code,{children:"backend_api_with_auth_finished"})," \u5206\u652f\uff0c\u67e5\u770b\u6700\u7ec8\u6b63\u786e\u5b9e\u73b0\u7684\u4ee3\u7801\u3002"]})}),"\n",(0,d.jsx)(n.admonition,{title:"\u606d\u559c\ud83c\udf89\ud83c\udf89\ud83c\udf89",type:"caution",children:(0,d.jsx)(n.p,{children:"\u606d\u559c\u4f60\u5df2\u7ecf\u987a\u5229\u5b8c\u6210 Todo List Application \u7684\u540e\u7aef API \u6559\u7a0b\u3002"})})]})}function l(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(u,{...e})}):u(e)}},1367:(e,n,s)=>{s.d(n,{A:()=>d});const d=s.p+"assets/images/api_with_auth_01-1228bfa268910aec85538fb7d843a84a.png"},7084:(e,n,s)=>{s.d(n,{A:()=>d});const d=s.p+"assets/images/api_with_auth_02-71dd1a2f387bfa004e638a477b2a4872.png"},149:(e,n,s)=>{s.d(n,{A:()=>d});const d=s.p+"assets/images/api_with_auth_03-1e9e41c3beecd0f98ae4862fa7935157.png"},5482:(e,n,s)=>{s.d(n,{A:()=>d});const d=s.p+"assets/images/api_with_auth_04-e7b3b530c6f59c15b4735c4048882c15.png"},691:(e,n,s)=>{s.d(n,{A:()=>d});const d=s.p+"assets/images/api_with_auth_05-82306d8d3d471dac15363d1084fd400e.png"},6200:(e,n,s)=>{s.d(n,{A:()=>d});const d=s.p+"assets/images/api_with_auth_06-439818523acd49be42a7812062e06498.png"},1377:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>i});var d=s(9474);const o={},r=d.createContext(o);function t(e){const n=d.useContext(r);return d.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),d.createElement(r.Provider,{value:n},e.children)}}}]);